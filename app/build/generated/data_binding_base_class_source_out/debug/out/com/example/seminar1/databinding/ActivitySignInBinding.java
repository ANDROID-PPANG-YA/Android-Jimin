// Generated by view binder compiler. Do not edit!
package com.example.seminar1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.seminar1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSi;

  @NonNull
  public final Button buttonSu;

  @NonNull
  public final EditText editId;

  @NonNull
  public final EditText editPw;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textviewId;

  @NonNull
  public final TextView textviewPw;

  private ActivitySignInBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonSi,
      @NonNull Button buttonSu, @NonNull EditText editId, @NonNull EditText editPw,
      @NonNull TextView textView, @NonNull TextView textviewId, @NonNull TextView textviewPw) {
    this.rootView = rootView;
    this.buttonSi = buttonSi;
    this.buttonSu = buttonSu;
    this.editId = editId;
    this.editPw = editPw;
    this.textView = textView;
    this.textviewId = textviewId;
    this.textviewPw = textviewPw;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSi;
      Button buttonSi = ViewBindings.findChildViewById(rootView, id);
      if (buttonSi == null) {
        break missingId;
      }

      id = R.id.buttonSu;
      Button buttonSu = ViewBindings.findChildViewById(rootView, id);
      if (buttonSu == null) {
        break missingId;
      }

      id = R.id.editId;
      EditText editId = ViewBindings.findChildViewById(rootView, id);
      if (editId == null) {
        break missingId;
      }

      id = R.id.editPw;
      EditText editPw = ViewBindings.findChildViewById(rootView, id);
      if (editPw == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textview_id;
      TextView textviewId = ViewBindings.findChildViewById(rootView, id);
      if (textviewId == null) {
        break missingId;
      }

      id = R.id.textview_pw;
      TextView textviewPw = ViewBindings.findChildViewById(rootView, id);
      if (textviewPw == null) {
        break missingId;
      }

      return new ActivitySignInBinding((ConstraintLayout) rootView, buttonSi, buttonSu, editId,
          editPw, textView, textviewId, textviewPw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
